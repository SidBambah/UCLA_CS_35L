Sidharth Bambah
UID: 904 787 435
Homework #1

Exercise 1.1
	C-n C-f (to get to first occurrence of word "PUBLIC")
	C-s L a b o r a t o r y (to get to first occurrence of word "Laboratory")
	C-s s e l f - r e f e r e n t i a l (to get to first occurrence of
											"self-referential")
	C-s arrow M-b (to get to start of first occurence of word "arrow")
	C-e (to get to end of line)
	C-a (to get to start of line)
Exercise 1.2
	M-g M-g 18 (jumps to the 18th line)
	C-k (kills the entire comment)
	C-s D E L E T E (jumps to the comment)
	C-a (move to beginning of line)
	C-k (kills the entire comment)
	C-s w i k i (searches for the comment)
	C-s (wasn't the first one so we search for the next mach)
	C-a C-k (kill middle line of comment)
	C-p C-k (kill first line of comment)
	C-n C-n C-k (kill last line of comment)
	C-s < ! (search for the next comment)
	C-s (not a comment)
	DEL DEL DEL DEL DEL (delete the comment)
	C-s < ! (search for the final comment)
	C-a C-k (go to the front of the comment and kill it)
Exercise 1.3
	C-s A s s i g n m e n t SP 1 RETURN A s s i g n m e n t 3 7 (find all to 
																	replace)
	y y n (only replace the first two instances of Assignment 1)
	C-s U T F - 8 RETURN U S - A S C I I (find UTF-8 and replace with US-ASCII)
	y n (only replace the first occurence)
	C-s < / o l > (searches for first occurence of </ol>)
	C-a RETURN (creates a line of space before </ol>)
Exercise 1.4
	c a t SP e x e r 2 . h t m l SP e x e r 2 . d i f f SP > e x e r 4 . h t m l 
																(create file)
	M-> (goes to end of file where diff ends)
	C-SP C-e M-w (select and copy each line to clipboard)
	Navigate to where line should be
	C-y (paste copied lines to proper location)
	C-SP M-> DELETE (deletes all of the diff portion)
	C-x u (undo the deletion)
	C-s < / h t m l > (searching for start of diff output)
	C-r (end of webpage = start of diff output)
	insert <!--
	C-s - - > M-% RETURN (replace comment ends with nothing within diff)
	y y y y y (remove all five ending comments in diff)
	M-> (go to end of diff output)
	insert -->
	C-s < o l > M-% < O l > (search for all of the <ol>'s and replace with <Ol>)
	y y y y y y y (replace all 7 occurrences)	
Exercise 1.5
	M-x m a k e - d i r e c t o r y ~ / j u n k (creates "junk" directory)
	C-x C-f ~ / j u n k / h e l l o . c (creates "hello.c" file)
	Next, I added the given program to the file
	M-! g c c - o h e l l o h e l l o . c (compiles the program using gcc)
	C-x b h e l l o - o u t (creates new buffer hello-out)
	C-u M-! . / h e l l o (places output of program into current buffer)
	#include <stdio.h>
	int
	main (void)
	{
	  char n = '\n';
	  char b = '\\';
	  char q = '"';
	  char const *p = "#include <stdio.h>%cint%cmain (void)%c{%c  char n = '%cn';%c  char b = '%c%c';%c  char q = '%c';%c  char const *p = %c%s%c;%c  printf (p, n, n, n, n, b, n, b, b, n, q, n, q, p, q, n, n, n, n);%c  return 0;%c}%c";
	  printf (p, n, n, n, n, b, n, b, b, n, q, n, q, p, q, n, n, n, n);
	  return 0;
	}
	C-x h M-w C-x o M-x > BACKSPACE C-y (to copy the output of program to this 
											file)
Exercise 1.6
	C-x b * s c r a t c h * (to switch to scratch buffer)
	( r a n d o m ) C-j (invokes random function)
	( s e t q SP x SP ( r a n d o m ) ) C-j (set x to a random number)
	( s e t q SP y SP ( r a n d o m ) ) C-j (set y to a random number)
	( * SP x SP y ) C-j 
	The answer is not mathematically correct. A positive number is multiplied
	with a negative number and the result is positive.
	M-: ( * SP x SP y ) RETURN
	The answer was incorrect just as with the previous method of evaluation.
	However, this time, the octadecimal and hexadecimal values are given.
	The random number generator is not truly random. This is due to two reasons.
	First, the computer only has a finite range of numbers available. Also, it
	seems that the numbers are generated based on a seed. Thus, they are not
	really random. The error seems to be the result of an overflow.
	